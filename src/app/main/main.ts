import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { Router } from '@angular/router';
import { ApiService } from '../services/service';

@Component({
  selector: 'app-auth-page',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './main.html',
  styleUrls: ['./main.scss']
})
export class Main {
  // tab
  activeTab: 'login' | 'register' = 'login';
  showAuthCard = false;

  // login
  loginEmail = '';
  loginPassword = '';
  loginError = '';
  isLoggingIn = false;

  // register
  registerUsername = '';
  registerEmail = '';
  registerPassword = '';
  registerConfirmPassword = '';
  registerImage = '';
  registerError = '';
  registerSuccess = '';
  isRegistering = false;

  // current user
  user: { id?: number; email?: string; role?: 'Admin'|'User' } | null = null;

   constructor(private api: ApiService, private router: Router) {}
   

  switchTab(tab: 'login' | 'register') {
    this.activeTab = tab;
    this.showAuthCard = true;
    this.loginError = '';
    this.registerError = '';
    this.registerSuccess = '';
  }

  // =====================
  // üîê LOGIN
  // =====================
  async onLogin() {
    this.loginError = '';
    if (!this.loginEmail || !this.loginPassword) {
      this.loginError = '‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô';
      return;
    }
    this.isLoggingIn = true;
    try {
      const res = await this.api.login(this.loginEmail, this.loginPassword);
      // res = { id, email, role }
      this.user = res;
      localStorage.setItem('currentUser', JSON.stringify(res)); // ‡πÄ‡∏Å‡πá‡∏ö session ‡∏ù‡∏±‡πà‡∏á client

      // ‡πÄ‡∏Ñ‡∏•‡∏µ‡∏¢‡∏£‡πå‡∏ü‡∏≠‡∏£‡πå‡∏°
      this.loginEmail = '';
      this.loginPassword = '';

      // ‚úÖ ‡πÄ‡∏ä‡πá‡∏Ñ role ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
      if (res.role === 'Admin') {
        this.router.navigate(['/admin']);
      } else {
        this.router.navigate(['/home']);
      }
    } catch (err: any) {
      this.loginError = err?.message || '‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß';
    } finally {
      this.isLoggingIn = false;
    }
  }

  // =====================
  // üìù REGISTER
  // =====================
  async onRegister() {
    this.registerError = '';
    this.registerSuccess = '';

    if (!this.registerUsername || !this.registerEmail || !this.registerPassword) {
      this.registerError = '‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô';
      return;
    }
    if (this.registerPassword !== this.registerConfirmPassword) {
      this.registerError = '‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô';
      return;
    }

    this.isRegistering = true;
    try {
      await this.api.register(this.registerUsername, this.registerEmail, this.registerPassword, this.registerImage);
      this.registerSuccess = '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö';
      this.registerUsername = '';
      this.registerEmail = '';
      this.registerPassword = '';
      this.registerConfirmPassword = '';
      this.registerImage = '';
      this.activeTab = 'login';
    } catch (err: any) {
      this.registerError = err.message || '‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à';
    } finally {
      this.isRegistering = false;
    }
  }

  // üö™ LOGOUT
  logout() {
    this.user = null;
    this.showAuthCard = false;
    this.router.navigate(['/']); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å
  }

  // computed
  get isLoggedIn() {
    return !!this.user;
  }
}
